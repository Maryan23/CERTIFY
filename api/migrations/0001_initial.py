<<<<<<< HEAD
# Generated by Django 3.2.9 on 2022-01-09 22:18
=======
# Generated by Django 3.2.9 on 2022-01-09 06:32
>>>>>>> ft-userapi

import cloudinary.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_employer', models.BooleanField(default=False)),
<<<<<<< HEAD
                ('is_institution', models.BooleanField(default=False)),
                ('is_learner', models.BooleanField(default=False)),
=======
>>>>>>> ft-userapi
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='Institution',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.user')),
                ('institution_reg_no', models.CharField(max_length=30)),
                ('institution_name', models.CharField(max_length=40)),
                ('location_name', models.CharField(max_length=20)),
                ('location_address', models.CharField(max_length=20)),
                ('institution_email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
=======
>>>>>>> ft-userapi
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_logo', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('company_name', models.CharField(max_length=50)),
                ('about', models.TextField(blank=True, max_length=1000)),
                ('company_tel_number', models.IntegerField()),
                ('company_email', models.EmailField(max_length=254)),
                ('company_reg_number', models.CharField(max_length=20)),
                ('joined_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Learner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learner_reg_no', models.CharField(max_length=30)),
                ('learner_first_name', models.CharField(max_length=10)),
                ('learner_second_name', models.CharField(blank=True, max_length=10)),
                ('learner_last_name', models.CharField(max_length=10)),
                ('course_taken', models.CharField(max_length=30)),
                ('date_enrolled', models.DateTimeField()),
                ('date_completed', models.DateTimeField()),
                ('grade_attained', models.CharField(max_length=20)),
                ('certificate_image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('institution', models.ManyToManyField(to='api.Institution')),
            ],
        ),
    ]
